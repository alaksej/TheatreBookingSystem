<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthorName" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="BackToMain" xml:space="preserve">
    <value>Back to main</value>
  </data>
  <data name="Bill" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>Cancel order</value>
  </data>
  <data name="CancelOrderMessage" xml:space="preserve">
    <value>The following orders have been cancelled</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Choose language...</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Performance date</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates of performances</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>About the play</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>Developed by</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ExportUnpaidOrders" xml:space="preserve">
    <value>Export unpaid orders to file</value>
  </data>
  <data name="GenreName" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="IsPaid" xml:space="preserve">
    <value>Is paid?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MainPage" xml:space="preserve">
    <value>Main page</value>
  </data>
  <data name="ManagePayments" xml:space="preserve">
    <value>Mange payments</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderCancelledTitle" xml:space="preserve">
    <value>Order cancelled</value>
  </data>
  <data name="OrderDeliveryMessage" xml:space="preserve">
    <value>Our staff member will contact you soon to arrange the delivery of your order.</value>
  </data>
  <data name="Ordered" xml:space="preserve">
    <value>Ordered</value>
  </data>
  <data name="OrderNotificationTitle" xml:space="preserve">
    <value>Order notification</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>Password must be at least 6 characters or longer</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="PlayName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PleaseLogin" xml:space="preserve">
    <value>Please login or register to order tickets</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantityRegExError" xml:space="preserve">
    <value>'Quantity' field must be a positive integer</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegistrationError" xml:space="preserve">
    <value>Error occured during registration</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Repertoire" xml:space="preserve">
    <value>Repertoire</value>
  </data>
  <data name="SiteName" xml:space="preserve">
    <value>Theatre Booking System</value>
  </data>
  <data name="ThankYouForOrder" xml:space="preserve">
    <value>Thank you for your order</value>
  </data>
  <data name="TicketPrice" xml:space="preserve">
    <value>Ticket price</value>
  </data>
  <data name="TotalTickets" xml:space="preserve">
    <value>Total tickets</value>
  </data>
  <data name="UnableToCancelOrder" xml:space="preserve">
    <value>Unable to cancel order. Please, make sure the number of tickets you entered is correct. Paid orders cannot be cancelled.</value>
  </data>
  <data name="UnableToOrderPast" xml:space="preserve">
    <value>Unable to place an order for the past performance</value>
  </data>
  <data name="UnableToPlaceOrder" xml:space="preserve">
    <value>Unable to place order. Please, make sure the number of tickets you entered is correct.</value>
  </data>
  <data name="UpdatePayments" xml:space="preserve">
    <value>Update payments</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome, Guest!</value>
  </data>
  <data name="BackToOrders" xml:space="preserve">
    <value>Back to orders</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="LoginIncorrectMessage" xml:space="preserve">
    <value>The login or password provided is incorrect</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>'User name' field is required</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="Sum" xml:space="preserve">
    <value>Sum</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="OrderListEmpty" xml:space="preserve">
    <value>Order list is empty</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MyOrders" xml:space="preserve">
    <value>My orders</value>
  </data>
  <data name="ConfirmFormSubmit" xml:space="preserve">
    <value>Do you reallly want to submit the form?</value>
  </data>
</root>